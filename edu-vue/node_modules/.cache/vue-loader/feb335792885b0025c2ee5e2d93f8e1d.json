{"remainingRequest":"F:\\workspace\\vscode\\vue\\test1-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\vscode\\vue\\test1-vue\\src\\components\\videoDetail.vue?vue&type=template&id=3942e0cc&","dependencies":[{"path":"F:\\workspace\\vscode\\vue\\test1-vue\\src\\components\\videoDetail.vue","mtime":1600325494599},{"path":"F:\\workspace\\vscode\\vue\\test1-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workspace\\vscode\\vue\\test1-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\workspace\\vscode\\vue\\test1-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workspace\\vscode\\vue\\test1-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}